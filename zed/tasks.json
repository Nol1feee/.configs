[
  {
    "label": "gci",
    "command": "gci write $ZED_FILE -s \"alias\" -s \"standard\" -s \"default\"",
    //"args": [],
    // Current working directory to spawn the command into, defaults to current project root.
    //"cwd": "/path/to/working/directory",
    // Whether to use a new terminal tab or reuse the existing one to spawn the process, defaults to `false`.
    "use_new_terminal": false,
    // Whether to allow multiple instances of the same task to be run, or rather wait for the existing ones to finish, defaults to `false`.
    "allow_concurrent_runs": false,
    // What to do with the terminal pane and tab, after the command was started:
    // * `always` — always show the terminal pane, add and focus the corresponding task's tab in it (default)
    // * `never` — avoid changing current terminal pane focus, but still add/reuse the task's tab there
    "reveal": "always",
    // What to do with the terminal pane and tab, after the command had finished:
    // * `never` — Do nothing when the command finishes (default)
    // * `always` — always hide the terminal tab, hide the pane also if it was the last tab in it
    // * `on_success` — hide the terminal tab on task success only, otherwise behaves similar to `always`
    "hide": "on_success",
    // Which shell to use when running a task inside the terminal.
    // May take 3 values:
    // 1. (default) Use the system's default terminal configuration in /etc/passwd
    //      "shell": "system"
    // 2. A program:
    //      "shell": {
    //        "program": "sh"
    //      }
    // 3. A program with arguments:
    //     "shell": {
    //         "with_arguments": {
    //           "program": "/bin/bash",
    //           "args": ["--login"]
    //         }
    //     }
    "shell": "system"
  },
  {
    // тестирование с html отчетом о покрытии всего пакета, в котором ты находишься
    // p.s. pre-commit автоматически перегенерит моки и удалит coverage.html & coverage.out
    "label": "tests.package coverage",
    // -coverprofile -> файл, содержащий информацию о покрытых участках кода
    // go tool cover -html -> генерит html файл на основе coverage.out
    // count=1 -> тесты прогонятся заново, не из кеша
    "command": "go test -coverprofile=coverage.out -race -count=1 -v -run ./... && go tool cover -html=coverage.out -o coverage.html && open coverage.html",
    "cwd": "$ZED_DIRNAME",
    "use_new_terminal": false,
    "allow_concurrent_runs": false,
    "reveal": "always",
    "hide": "on_success",
    "shell": "system"
  },
  {
    // тестирование функции, в теле который находится курсор (как тестируемая, так и тестовая)
    "label": "tests.func",
    "command": "go test -race -count=1 -v -run $ZED_SYMBOL",
    "cwd": "$ZED_DIRNAME",
    "use_new_terminal": false,
    "allow_concurrent_runs": false,
    "reveal": "always",
    "hide": "on_success",
    "shell": "system"
  },
  {
    // тестирование отдельного кейса функции, который сейчас выделен
    "label": "tests.separate case",
    "command": "go test -race -count=1 -v -run $ZED_SYMBOL/$ZED_SELECTED_TEXT",
    "cwd": "$ZED_DIRNAME",
    "use_new_terminal": false,
    "allow_concurrent_runs": false,
    "reveal": "always",
    "hide": "never",
    "shell": "system"
  },
  {
    // тестирование всего пакетa, в котором ты находишься
    "label": "tests.package",
    "command": "go test -race -count=1 -v",
    "cwd": "$ZED_DIRNAME",
    "use_new_terminal": false,
    "allow_concurrent_runs": false,
    "reveal": "always",
    "hide": "on_success",
    "shell": "system"
  }
  // {
  //   // Генерация тестов для функции, в теле которой находится курсор
  //   "label": "gen.tests.selected",
  //   "command": "gotests -w -template testify -only $ZED_SYMBOL $ZED_FILE",
  //   "cwd": "$ZED_DIRNAME",
  //   "use_new_terminal": false,
  //   "allow_concurrent_runs": false,
  //   "reveal": "always",
  //   "hide": "never",
  //   "shell": "system"
  // }
  // {
  // todo, не работает
  // // реген моков
  // "label": "regen mocks",
  // "command": "bash -c 'find . -type d -name mocks | xargs -I {} rm -rf {}; find . -type f -name coverage.out | xargs -I {} rm -f {}; find . -type f -name coverage.html | xargs -I {} rm -f {}; mockery'",
  // "cwd": "$ZED_WORKTREE_ROOT",
  // "use_new_terminal": false,
  // "allow_concurrent_runs": false,
  // "reveal": "always",
  // "hide": "never",
  // "shell": "system"
  // }
]
